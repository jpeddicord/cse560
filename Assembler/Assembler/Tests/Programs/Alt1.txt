ALT1      start      0                                  
      SOPER      READ,4      :Read in all XX's
      MOPER      READ,YY1      :Read in YY1
      MOPER      READ,YY2      :Read in YY2
      MOPER      READ,YY3      :Read in YY3
      MOPER      READ,YY4      :Read in YY4
      STACK       PUSH,YY4
      STACK       TEST,=0
      JUMP      =,err      :If divide by 0, go to HALT
      STACK       PUSH,YY3
      STACK       TEST,=0
      JUMP      =,err      :If divide by 0, go to HALT
      STACK       PUSH,YY2
      STACK       TEST,=0
      JUMP      =,err      :If divide by 0, go to HALT
      STACK       PUSH,YY1
      STACK       TEST,=0
      JUMP      =,err      :If divide by 0, go to HALT
      MOPER      DIV,YY4      :divide XX4 by YY4
      STACK      POP,RE4
      MOPER      DIV,YY3      :divide XX4 by YY3
      STACK      POP,RE3
      MOPER      DIV,YY2      :divide XX4 by YY2
      STACK      POP,RE2
      MOPER      DIV,YY1      :divide XX4 by YY1
      STACK      POP,RE1
      STACK       PUSH,RE4
      STACK       PUSH,RE3
      STACK       PUSH,RE2
      STACK       PUSH,RE1
      SOPER      ADD,4
      SOPER      WRITE,1
      CNTL      GOTO,E1      :Then go to the exit routine
err      MOPER      WRITEC,EMSG1
      MOPER      WRITEC,EMSG2
      MOPER      WRITEC,EMSG3
      MOPER      WRITEC,EMSG4
E1      CNTL      HALT      :Halt
: CONSTANTS AND TEMPORARIES
YY1      dat      I=0
YY2      dat      I=0
YY3      dat      I=0
YY4      dat      I=0
RE1      dat      I=0
RE2      dat      I=0
RE3      dat      I=0
RE4      dat      I=0
EMSG1      dat      c='Di'
EMSG2      dat      C='v '
EMSG3      dat      c='by'
EMSG4      dat      c=' 0'
      END      ALT1
